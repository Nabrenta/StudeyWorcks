<html>



<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>Об*єктно-орієнтована декомпозиція предметного середовища - версія 1</title>
	<style>
	A {
		color: black;
	}
	A:visited {
		color: black;
	}
	A:hover {
		color: red;
	}
	.linc {
		display: inline;
		border: 3px ridge #ffaa77;
		margin: 1px;
		background-color: #efc189;
	}
	.linc2{
		border: 3px ridge #ffaa77;
		background-color: #efc189;
		width:23%
	}
	.content{
		border: 5px ridge #5634ff;
		position: absolute;
				top: 20%;
		left: 25%;
		background-color: #efc189;
	}
	.menu1 {
		margin-top: 1%;
	} 
	</style>
</head>
<body bgcolor="#d9a149">

<h1><a href="../../index.htm">На Головну</a></h1>

<div class = "linc"><a href="../version1/p1.htm">Версія 1</a></div>
<div class = "linc"><a href="../version2/p12.htm">Версія 2</a></div>
<div class = "linc"><a href="p13.htm"><font color="#0000FF">Версія 3</font></a></div>
<div class = "linc"><a href="../version4/p14.htm">Версія 4</a></div>
<div class = "linc"><a href="../version5/p15.htm">Версія 5</a></div>
<div class = "linc"><a href="../version6/p16.htm">Версія 6</a></div>
<div class = "linc"><a href="../version7/p17.htm">Версія 7</a></div>

<div class = "menu1">
<div class = "linc2"><a href="p13.htm">Характеристика об*єкта декомпозиції</a></div>
<div class = "linc2"><a href="p33.htm">Проектування ПЗ</a> </div>
<div class = "linc2"><a href="p43.htm"><font color="#0000FF">Кодування</font></a></div>
<div class = "linc2"><a href="p53.htm">Впровадження та супроводження</a></div>
<div class = "linc2"><a href="p63.htm">Висновки</a></div>
</div>

<div class = "content">

<h2></h2>
<h2 align="center">HIPO-<span lang="uk">діаграма</span></h2>
<p><img border="0" src="HIPO3.png" width="931" height="373"></p>
<h2 align="center"><span lang="uk">Опис програми:</span></h2>
<table border="1" width="100%">
	<tr>
		<td><span lang="uk"><b>Прототип функції</b></span></td>
		<td><b><span lang="uk">Семантика функції</span></b></td>
		<td><b><span lang="uk">Параментри</span></b></td>
		<td><b><span lang="uk">Семантика параметрів</span></b></td>
	</tr>
	<tr>
		<td>Book::Book()</td>
		<td><span lang="uk">Конструктор по замовченню</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>Book:: Book(const Book&amp; otherBook)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const Book&amp; otherBook</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td>Book::~Book()</td>
		<td><span lang="uk">Деструктор</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>Catalog::Catalog(const std::vector&lt;Book&gt;&amp;mBooks)</td>
		<td><span lang="uk">Конструктор ініціалізації</span></td>
		<td>const std::vector&lt;Book&gt;&amp;mBooks</td>
		<td><span lang="uk">Посилання на змінні, значеннями яких ініціалізуються 
		атрибути</span></td>
	</tr>
	<tr>
		<td>Catalog::Catalog(const Catalog&amp;cat)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const Catalog&amp;cat</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td>Catalog::~Catalog()</td>
		<td><span lang="uk">Деструктор</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>Librariar::Librariar()</td>
		<td><span lang="uk">Конструктор за замовченням</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>Librariar::Librariar(int i)</td>
		<td><span lang="uk">Конструктор перетворення типів</span></td>
		<td>int i</td>
		<td><span lang="uk">Посилання на змінну, тип якої перетворюється</span></td>
	</tr>
	<tr>
		<td>Librariar::Librariar(const Librariar &amp;libr)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const Librariar &amp;libr</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td>Librariar::~Librariar()</td>
		<td><span lang="uk">Деструктор</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>Library::Library(bool flag)</td>
		<td><span lang="uk">Конструктор з формальнім параметром (виконує роль 
		конструктора по замовченню)</span></td>
		<td>bool flag</td>
		<td><span lang="uk">Формальній параметр, забезпечує коректне виконання 
		конструктора</span></td>
	</tr>
	<tr>
		<td>Library::Library(int numb1, int numb2, bool light, int mode)</td>
		<td><span lang="uk">Конструктор ініціалізації</span></td>
		<td>int numb1, int numb2, bool light, int mode</td>
		<td><span lang="uk">Змінні, значеннями яких ініціалізуються атрибути</span></td>
	</tr>
	<tr>
		<td>Library::Library(const Library&amp;lib)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const Library&amp;lib</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td>Library::~Library()</td>
		<td><span lang="uk">Деструктор</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>PrintScanner::PrintScanner()</td>
		<td><span lang="uk">Конструктор за замовченням</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>PrintScanner::PrintScanner(const PrintScanner&amp;prin)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const PrintScanner&amp;prin</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td>PrintScanner::~PrintScanner()</td>
		<td><span lang="uk">Деструктор</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>ReadingRoom::ReadingRoom()</td>
		<td><span lang="uk">Конструктор за замовченням</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>ReadingRoom::ReadingRoom(const ReadingRoom&amp; read)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const ReadingRoom&amp; read</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td>ReadingRoom::~ReadingRoom()</td>
		<td><span lang="uk">Деструктор</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>User::User()</td>
		<td><span lang="uk">Конструктор за замовченням</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>User::User(const User&amp;us)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const User&amp;us</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td>User::~User()</td>
		<td><span lang="uk">Деструктор</span></td>
		<td><span lang="uk">Без параметрів</span></td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>UserList::UserList(const std::vector&lt;User&gt;&amp;mUsers)</td>
		<td><span lang="uk">Конструктор ініціалізації</span></td>
		<td>const std::vector&lt;User&gt;&amp;mUsers</td>
		<td><span lang="uk">Посилання на змінні, значеннями яких ініціалізуються 
		атрибути</span></td>
	</tr>
	<tr>
		<td>UserList::UserList(const UserList&amp;uslist)</td>
		<td><span lang="uk">Конструктор копії</span></td>
		<td>const UserList&amp;uslist</td>
		<td><span lang="uk">Посилання на об*єкт, що копіюється</span></td>
	</tr>
	<tr>
		<td height="24">UserList::~UserList()</td>
		<td height="24"><span lang="uk">Деструктор</span></td>
		<td height="24"><span lang="uk">Без параметрів</span></td>
		<td height="24">&nbsp;</td>
	</tr>
	<tr>
		<td>std::string Book::getName()</td>
		<td>Аксесор назви книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>std::string Book::getSubj()</td>
		<td>Аксесор предметної області книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>bool Book::getAvail()</td>
		<td>Предикатна функція</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>limit Book::getLimit()</td>
		<td>Аксесор обмежень на видачу книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>date Book::getDat()</td>
		<td>Аксесор дати видачі книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>int Book::getStay()</td>
		<td>Аксесор стану книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>std::string Book::getCode()</td>
		<td>Аксесор коду книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>int Book::getCost()</td>
		<td>Аксесор вартості книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>types Book::getType()</td>
		<td>Аксесор типу книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>void Book::setName(std::string name)</td>
		<td>Встановлення назви книги (утиліта)</td>
		<td>std::string name</td>
		<td>Нове ім*я книги</td>
	</tr>
	<tr>
		<td>void Book::setLimit(int i)</td>
		<td>Встановлення обмежень на видачу книги (утиліта)</td>
		<td>int i</td>
		<td>Код нового обмеження</td>
	</tr>
	<tr>
		<td>void Book::setDat(date dat)</td>
		<td>Встановлення дати видачі книги</td>
		<td>date dat</td>
		<td>Нова дата видачі книги</td>
	</tr>
	<tr>
		<td>void Book::setStay(int situate)</td>
		<td>Встановлення стану книги</td>
		<td>int situate</td>
		<td>Оцінка стану книги</td>
	</tr>
	<tr>
		<td>void Book::setCost(int summ)</td>
		<td>Встановлення вартості книги</td>
		<td>int summ</td>
		<td>Вартість книги</td>
	</tr>
	<tr>
		<td>void Book::setType(int typ)</td>
		<td>Встановлення типу книги</td>
		<td>int typ</td>
		<td>Код типу книги</td>
	</tr>
	<tr>
		<td>void Book::ChangeBook(void)</td>
		<td>Ітератор зміни деяких властивостей книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>void Book::OutputInformation()</td>
		<td>Ітератор виведення інформації про книги</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>void Catalog::CBook(int n)</td>
		<td>Зміна вибраної книги</td>
		<td>int n</td>
		<td>Номер книги, що потрібно змінити</td>
	</tr>
	<tr>
		<td>void Catalog::GBook(int n)</td>
		<td>Виведення інформації про вибрану книги</td>
		<td>int n</td>
		<td>Номер книги, дані про яку потрібно вивести</td>
	</tr>
	<tr>
		<td>Book&amp; Catalog::getBook(int n)</td>
		<td>Повернення посилання на вибрану книги</td>
		<td>int n</td>
		<td>Номер книги, посилання на якуповертається</td>
	</tr>
	<tr>
		<td>worcker Librariar::getGroop()</td>
		<td>Повернення групу бібліотекаря</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>void Librariar::setGroop(int tipe)</td>
		<td>Встановлення групи бібліотекаря</td>
		<td>int tipe</td>
		<td>Код типу</td>
	</tr>
	<tr>
		<td>void Library::ChBook(int n)</td>
		<td>Зміна вибраної книги</td>
		<td>int n</td>
		<td>Номер книги, що потрібно змінити</td>
	</tr>
	<tr>
		<td>void Library::ChBook(int n)</td>
		<td>Виведення інформації про вибрану книги</td>
		<td>int n</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>Catalog&amp; Library::getCatalog()</td>
		<td>Повернення посилання на каталог</td>
		<td>&nbsp;</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>int Library::getStudy()</td>
		<td>Повернення обмежень на час використання навчальної літератури</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>int Library::getFiction()</td>
		<td>Повернення обмежень на час використання художньої літератури</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>void Library::setElectric(bool av)</td>
		<td>Встановлення наявності/відсутності світла</td>
		<td>bool av</td>
		<td>Маркер наявності/відсутності світла</td>
	</tr>
	<tr>
		<td>void Library::setStudy(int limit)</td>
		<td>Встановлення обмежень на час використання навчальної літератури</td>
		<td>int limit</td>
		<td>Максимальни час утримання навчальної літератури</td>
	</tr>
	<tr>
		<td>void Library::setFiction(int limit)</td>
		<td>Встановлення обмежень на час використання художньої літератури</td>
		<td>int limit</td>
		<td>Максимальни час утримання навчальноїхудожньої літератури</td>
	</tr>
	<tr>
		<td>bool Library::getElectric()</td>
		<td>Повернення наявності/відсутності світла</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>bool PrintScanner::getPrinter()</td>
		<td>Повернення справності/несправності принтера</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>bool PrintScanner::getScanner()</td>
		<td>Повернення справності/несправності сканера</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>int PrintScanner::getPaper()</td>
		<td>Повернення кількості паперу</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>int PrintScanner::getMPaper()</td>
		<td>Повернення максимальної кількості паперу</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>int PrintScanner::getMPaint()</td>
		<td>Повернення максимальної кількості фарби</td>
		<td>Без параметрів</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>void PrintScanner::AssesOfPrinter(bool asses)</td>
		<td>Визначення доступності принтера</td>
		<td>bool asses</td>
		<td>Модифікатор доступності</td>
	</tr>
	<tr>
		<td>void PrintScanner::AssesOfScaner(bool asses)</td>
		<td>Визначення доступності сканера</td>
		<td>bool asses</td>
		<td>Модифікатор доступності</td>
	</tr>
	<tr>
		<td>void PrintScanner::PutPaper(int numb)</td>
		<td>Додавання паперу</td>
		<td>int numb</td>
		<td>Кількість доданого паперу</td>
	</tr>
	<tr>
		<td>void PrintScanner::PutPaint(int numb)</td>
		<td>Додавання фарби</td>
		<td>int numb</td>
		<td>Кількість доданого паперу</td>
	</tr>
	<tr>
		<td height="25">void PrintScanner::setMPaper(int numb)</td>
		<td height="25">Встановлення максимальної кількості паперу</td>
		<td height="25">int numb</td>
		<td height="25">Максимальна кількість паперу</td>
	</tr>
	<tr>
		<td height="25">void PrintScanner::setMPaint(int numb)</td>
		<td height="25">Встановлення максимальної кількості фарби</td>
		<td height="25">int numb</td>
		<td height="25">Максимальна кількість фарби</td>
	</tr>
	<tr>
		<td height="25">int ReadingRoom::getScanPrise()</td>
		<td height="25">Повернення вартості скану</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25">int ReadingRoom::getCopyPrise()</td>
		<td height="25">Повернення вартості копії</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25">bool ReadingRoom::getStayWiFi()</td>
		<td height="25">Повернути стан WiFi</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25">void ReadingRoom::AssesOfWiFi(bool asses)</td>
		<td height="25">Встановити стан WiFi</td>
		<td height="25">bool asses</td>
		<td height="25">Модифікатор доступності WiFi</td>
	</tr>
	<tr>
		<td height="25">void ReadingRoom::setScanPrise(int prise)</td>
		<td height="25">Встановлення вартості скану</td>
		<td height="25">int prise</td>
		<td height="25">Вартість скану</td>
	</tr>
	<tr>
		<td height="25">void ReadingRoom::setCopyPrise(int prise)</td>
		<td height="25">Встановлення вартості копії</td>
		<td height="25">int prise</td>
		<td height="25">Вартість копії</td>
	</tr>
	<tr>
		<td height="25">std::string User::getLogin()</td>
		<td height="25">Повернення логіну</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25"><i>std::string User::getBook(int n)</i></td>
		<td height="25"><i>Повернення коду обраної книги</i></td>
		<td height="25">int n</td>
		<td height="25">Номер книги</td>
	</tr>
	<tr>
		<td height="25">int User::getNumbBook()</td>
		<td height="25">Отримання кількості книг на руках</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25">int User::getNumbDebts()</td>
		<td height="25">Отриматиння кількості боргів</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25">std::string User::getPassword()</td>
		<td height="25">Отримання паролю</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25">groop User::getUserGroop()</td>
		<td height="25">Отримати групу користувачів</td>
		<td height="25">Без параметрів</td>
		<td height="25">&nbsp;</td>
	</tr>
	<tr>
		<td height="25">void User::setLogin(std::string username)</td>
		<td height="25">Встановлення логіну</td>
		<td height="25">std::string username</td>
		<td height="25">Новий логін</td>
	</tr>
	<tr>
		<td height="25">void User::setPassword(std::string pass)</td>
		<td height="25">Встановлення пароля</td>
		<td height="25">std::string pass</td>
		<td height="25">Новий пароль</td>
	</tr>
	<tr>
		<td height="25">void User::setUserGroop(int grup)</td>
		<td height="25">Встановлення групи користувача</td>
		<td height="25">int grup</td>
		<td height="25">Код групи</td>
	</tr>
	<tr>
		<td height="25"><i>void UserList::getUser(int n)</i></td>
		<td height="25"><i>Повернення імені користувача</i></td>
		<td height="25">int n</td>
		<td height="25">Номер користувача</td>
	</tr>
</table>
<h3 align="center"><span lang="uk">Файлова структура проекту</span></h3>
<p align="center">
<img border="0" src="FileStruct3.png" width="241" height="564"></div>

</body>

</html>
